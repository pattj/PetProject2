// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetProject2.Models;

namespace PetProject2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181008022639_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetProject2.Models.Pet", b =>
                {
                    b.Property<int>("AnimalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pet_breed1");

                    b.Property<string>("pet_breed2");

                    b.Property<string>("pet_description");

                    b.Property<string>("pet_detail");

                    b.Property<string>("pet_gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("pet_lastupdated");

                    b.Property<string>("pet_name");

                    b.Property<string>("pet_photo");

                    b.Property<string>("pet_type");

                    b.Property<string>("shelter_id");

                    b.HasKey("AnimalID");

                    b.ToTable("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
